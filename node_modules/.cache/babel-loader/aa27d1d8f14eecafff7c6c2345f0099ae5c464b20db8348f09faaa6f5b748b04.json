{"ast":null,"code":"// Device detection utility for mobile-optimized UI\n\nexport const detectDevice = () => {\n  const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n  // Detect iOS\n  const isIOS = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n\n  // Detect Android\n  const isAndroid = /android/i.test(userAgent);\n\n  // Detect mobile (any)\n  const isMobile = isIOS || isAndroid || /Mobile|Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(userAgent);\n\n  // Detect tablet\n  const isTablet = /(tablet|ipad|playbook|silk)|(android(?!.*mobi))/i.test(userAgent);\n  return {\n    isIOS,\n    isAndroid,\n    isMobile,\n    isTablet,\n    isDesktop: !isMobile && !isTablet,\n    platform: isIOS ? 'ios' : isAndroid ? 'android' : 'desktop'\n  };\n};\nexport const getDeviceStyles = () => {\n  const device = detectDevice();\n  if (device.isIOS) {\n    return {\n      // iOS-specific styles\n      inputClass: 'rounded-xl border-2 focus:border-blue-500 transition-all',\n      buttonClass: 'rounded-xl shadow-sm active:scale-95 transition-transform',\n      cardClass: 'rounded-2xl shadow-lg backdrop-blur-sm',\n      headerClass: 'sticky top-0 backdrop-blur-md bg-white/90',\n      bottomNav: true,\n      hapticFeedback: true\n    };\n  } else if (device.isAndroid) {\n    return {\n      // Android Material Design styles\n      inputClass: 'rounded-lg border focus:border-blue-600 transition-colors',\n      buttonClass: 'rounded-lg shadow-md active:shadow-lg transition-shadow',\n      cardClass: 'rounded-lg shadow-md',\n      headerClass: 'sticky top-0 bg-white shadow-sm',\n      bottomNav: true,\n      hapticFeedback: false\n    };\n  } else {\n    return {\n      // Desktop styles\n      inputClass: 'rounded-lg border focus:ring-2 focus:ring-blue-500',\n      buttonClass: 'rounded-lg hover:shadow-lg transition-all',\n      cardClass: 'rounded-xl shadow-lg',\n      headerClass: 'sticky top-0 bg-white shadow',\n      bottomNav: false,\n      hapticFeedback: false\n    };\n  }\n};\nexport const triggerHaptic = (type = 'light') => {\n  const device = detectDevice();\n  if (device.isIOS && window.navigator.vibrate) {\n    // iOS haptic patterns\n    const patterns = {\n      light: [10],\n      medium: [20],\n      heavy: [30],\n      success: [10, 50, 10],\n      error: [20, 100, 20]\n    };\n    window.navigator.vibrate(patterns[type] || patterns.light);\n  } else if (device.isAndroid && window.navigator.vibrate) {\n    // Android vibration patterns\n    const patterns = {\n      light: 10,\n      medium: 20,\n      heavy: 30,\n      success: [10, 50, 10],\n      error: [20, 100, 20]\n    };\n    window.navigator.vibrate(patterns[type] || patterns.light);\n  }\n};","map":{"version":3,"names":["detectDevice","userAgent","navigator","vendor","window","opera","isIOS","test","MSStream","isAndroid","isMobile","isTablet","isDesktop","platform","getDeviceStyles","device","inputClass","buttonClass","cardClass","headerClass","bottomNav","hapticFeedback","triggerHaptic","type","vibrate","patterns","light","medium","heavy","success","error"],"sources":["/Users/prabdhar/CascadeProjects/windsurf-project/src/utils/deviceDetection.js"],"sourcesContent":["// Device detection utility for mobile-optimized UI\n\nexport const detectDevice = () => {\n  const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n  \n  // Detect iOS\n  const isIOS = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n  \n  // Detect Android\n  const isAndroid = /android/i.test(userAgent);\n  \n  // Detect mobile (any)\n  const isMobile = isIOS || isAndroid || /Mobile|Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(userAgent);\n  \n  // Detect tablet\n  const isTablet = /(tablet|ipad|playbook|silk)|(android(?!.*mobi))/i.test(userAgent);\n  \n  return {\n    isIOS,\n    isAndroid,\n    isMobile,\n    isTablet,\n    isDesktop: !isMobile && !isTablet,\n    platform: isIOS ? 'ios' : isAndroid ? 'android' : 'desktop'\n  };\n};\n\nexport const getDeviceStyles = () => {\n  const device = detectDevice();\n  \n  if (device.isIOS) {\n    return {\n      // iOS-specific styles\n      inputClass: 'rounded-xl border-2 focus:border-blue-500 transition-all',\n      buttonClass: 'rounded-xl shadow-sm active:scale-95 transition-transform',\n      cardClass: 'rounded-2xl shadow-lg backdrop-blur-sm',\n      headerClass: 'sticky top-0 backdrop-blur-md bg-white/90',\n      bottomNav: true,\n      hapticFeedback: true\n    };\n  } else if (device.isAndroid) {\n    return {\n      // Android Material Design styles\n      inputClass: 'rounded-lg border focus:border-blue-600 transition-colors',\n      buttonClass: 'rounded-lg shadow-md active:shadow-lg transition-shadow',\n      cardClass: 'rounded-lg shadow-md',\n      headerClass: 'sticky top-0 bg-white shadow-sm',\n      bottomNav: true,\n      hapticFeedback: false\n    };\n  } else {\n    return {\n      // Desktop styles\n      inputClass: 'rounded-lg border focus:ring-2 focus:ring-blue-500',\n      buttonClass: 'rounded-lg hover:shadow-lg transition-all',\n      cardClass: 'rounded-xl shadow-lg',\n      headerClass: 'sticky top-0 bg-white shadow',\n      bottomNav: false,\n      hapticFeedback: false\n    };\n  }\n};\n\nexport const triggerHaptic = (type = 'light') => {\n  const device = detectDevice();\n  \n  if (device.isIOS && window.navigator.vibrate) {\n    // iOS haptic patterns\n    const patterns = {\n      light: [10],\n      medium: [20],\n      heavy: [30],\n      success: [10, 50, 10],\n      error: [20, 100, 20]\n    };\n    window.navigator.vibrate(patterns[type] || patterns.light);\n  } else if (device.isAndroid && window.navigator.vibrate) {\n    // Android vibration patterns\n    const patterns = {\n      light: 10,\n      medium: 20,\n      heavy: 30,\n      success: [10, 50, 10],\n      error: [20, 100, 20]\n    };\n    window.navigator.vibrate(patterns[type] || patterns.light);\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}